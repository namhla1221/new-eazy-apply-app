{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport validator from \"validator\";\nimport { context as authContext } from \"../../hooks/useAuth\";\nexport const useSignIn = () => {\n  _s();\n\n  const {\n    signIn: authSignIn\n  } = useContext(authContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [alert, setAlert] = useState(null);\n\n  const signIn = async () => {\n    if (!email || email.length < 1) return \"noEmail\";\n    if (!password || password.length < 1) return \"noPassword\";\n    if (!validator.isEmail(email)) return setAlert(\"formatEmail\");\n    if (password.length < 8) return setAlert(\"shortPassword\");\n    setAlert('checking');\n    const [success, code] = await authSignIn(email, password);\n\n    if (!success) {\n      return setAlert(code);\n    }\n  };\n\n  return {\n    email,\n    password,\n    setEmail,\n    setPassword,\n    signIn,\n    alert\n  };\n};\n\n_s(useSignIn, \"k8KOFpTMUumqptpmO465tSc3bR8=\");\n\nexport default useSignIn;","map":{"version":3,"sources":["/home/namhla/projects/New-Eazy-Apply/src/views/SignIn/SignIn.useSignIn.js"],"names":["useState","useContext","validator","context","authContext","useSignIn","signIn","authSignIn","email","setEmail","password","setPassword","alert","setAlert","length","isEmail","success","code"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,qBAAvC;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,MAAM,EAAEC;AAAV,MAAyBN,UAAU,CAACG,WAAD,CAAzC;AAEA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMM,MAAM,GAAG,YAAY;AACzB,QAAI,CAACE,KAAD,IAAUA,KAAK,CAACM,MAAN,GAAe,CAA7B,EAAgC,OAAO,SAAP;AAChC,QAAI,CAACJ,QAAD,IAAaA,QAAQ,CAACI,MAAT,GAAkB,CAAnC,EAAsC,OAAO,YAAP;AAEtC,QAAI,CAACZ,SAAS,CAACa,OAAV,CAAkBP,KAAlB,CAAL,EAA+B,OAAOK,QAAQ,CAAC,aAAD,CAAf;AAC/B,QAAIH,QAAQ,CAACI,MAAT,GAAkB,CAAtB,EAAyB,OAAOD,QAAQ,CAAC,eAAD,CAAf;AAEzBA,IAAAA,QAAQ,CAAC,UAAD,CAAR;AACA,UAAM,CAACG,OAAD,EAAUC,IAAV,IAAkB,MAAMV,UAAU,CAACC,KAAD,EAAQE,QAAR,CAAxC;;AAEA,QAAI,CAACM,OAAL,EAAc;AACZ,aAAOH,QAAQ,CAACI,IAAD,CAAf;AACD;AACF,GAbD;;AAeA,SAAO;AACLT,IAAAA,KADK;AAELE,IAAAA,QAFK;AAGLD,IAAAA,QAHK;AAILE,IAAAA,WAJK;AAKLL,IAAAA,MALK;AAMLM,IAAAA;AANK,GAAP;AAQD,CA9BM;;GAAMP,S;;AAgCb,eAAeA,SAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport validator from \"validator\";\nimport { context as authContext } from \"../../hooks/useAuth\";\n\nexport const useSignIn = () => {\n  const { signIn: authSignIn } = useContext(authContext)\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [alert, setAlert] = useState(null);\n  \n  const signIn = async () => {\n    if (!email || email.length < 1) return \"noEmail\";\n    if (!password || password.length < 1) return \"noPassword\";\n\n    if (!validator.isEmail(email)) return setAlert(\"formatEmail\");\n    if (password.length < 8) return setAlert(\"shortPassword\");\n  \n    setAlert('checking');\n    const [success, code] = await authSignIn(email, password) \n    \n    if (!success) {\n      return setAlert(code)\n    }\n  };\n\n  return {\n    email,\n    password,\n    setEmail,\n    setPassword,\n    signIn,\n    alert,\n  };\n};\n\nexport default useSignIn;\n"]},"metadata":{},"sourceType":"module"}