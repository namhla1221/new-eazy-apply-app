{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport validator from \"validator\";\nimport { context as authContext } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\nexport const useNewAccount = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    createAccount: authCreateAccount\n  } = useContext(authContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [alert, setAlert] = useState(null);\n\n  const createAccount = async () => {\n    if (!email || email.length < 1) return \"noEmail\";\n    if (!password || password.length < 1) return \"noPassword\";\n    if (!confirmPassword || confirmPassword.length < 1) return \"noConfirmPassword\";\n    if (!validator.isEmail(email)) return setAlert(\"formatEmail\");\n    if (password.length < 8) return setAlert(\"shortPassword\");\n    if (confirmPassword.length < 8) return setAlert(\"shortConfirmPassword\");\n    if (password !== confirmPassword) return setAlert(\"mismatchPassword\");\n    setAlert(\"creating\");\n    const [success, code] = await authCreateAccount(email, password);\n\n    if (!success) {\n      return setAlert(code);\n    }\n\n    history.push('/auth/sent');\n  };\n\n  return {\n    email,\n    password,\n    confirmPassword,\n    setEmail,\n    setPassword,\n    setConfirmPassword,\n    createAccount,\n    alert\n  };\n};\n\n_s(useNewAccount, \"bMYbRRaZ06O5evkPskM5F08S/oE=\", false, function () {\n  return [useHistory];\n});\n\nexport default useNewAccount;","map":{"version":3,"sources":["/home/namhla/projects/new-eazy-apply-app/src/views/NewAccount/NewAccount.useNewAccount.js"],"names":["useState","useContext","validator","context","authContext","useHistory","useNewAccount","history","createAccount","authCreateAccount","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","alert","setAlert","length","isEmail","success","code","push"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,qBAAvC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAM;AAAEG,IAAAA,aAAa,EAAEC;AAAjB,MAAuCR,UAAU,CAACG,WAAD,CAAvD;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMQ,aAAa,GAAG,YAAY;AAChC,QAAI,CAACE,KAAD,IAAUA,KAAK,CAACQ,MAAN,GAAe,CAA7B,EAAgC,OAAO,SAAP;AAChC,QAAI,CAACN,QAAD,IAAaA,QAAQ,CAACM,MAAT,GAAkB,CAAnC,EAAsC,OAAO,YAAP;AACtC,QAAI,CAACJ,eAAD,IAAoBA,eAAe,CAACI,MAAhB,GAAyB,CAAjD,EACE,OAAO,mBAAP;AAEF,QAAI,CAAChB,SAAS,CAACiB,OAAV,CAAkBT,KAAlB,CAAL,EAA+B,OAAOO,QAAQ,CAAC,aAAD,CAAf;AAC/B,QAAIL,QAAQ,CAACM,MAAT,GAAkB,CAAtB,EAAyB,OAAOD,QAAQ,CAAC,eAAD,CAAf;AACzB,QAAIH,eAAe,CAACI,MAAhB,GAAyB,CAA7B,EAAgC,OAAOD,QAAQ,CAAC,sBAAD,CAAf;AAEhC,QAAIL,QAAQ,KAAKE,eAAjB,EAAkC,OAAOG,QAAQ,CAAC,kBAAD,CAAf;AAClCA,IAAAA,QAAQ,CAAC,UAAD,CAAR;AAEA,UAAM,CAACG,OAAD,EAAUC,IAAV,IAAkB,MAAMZ,iBAAiB,CAACC,KAAD,EAAQE,QAAR,CAA/C;;AAEE,QAAI,CAACQ,OAAL,EAAc;AACZ,aAAOH,QAAQ,CAACI,IAAD,CAAf;AACD;;AACDd,IAAAA,OAAO,CAACe,IAAR,CAAa,YAAb;AACH,GAnBD;;AAqBA,SAAO;AACLZ,IAAAA,KADK;AAELE,IAAAA,QAFK;AAGLE,IAAAA,eAHK;AAILH,IAAAA,QAJK;AAKLE,IAAAA,WALK;AAMLE,IAAAA,kBANK;AAOLP,IAAAA,aAPK;AAQLQ,IAAAA;AARK,GAAP;AAUD,CAxCM;;GAAMV,a;UACKD,U;;;AAyClB,eAAeC,aAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport validator from \"validator\";\nimport { context as authContext } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const useNewAccount = () => {\n  const history = useHistory(); \n  const { createAccount: authCreateAccount } = useContext(authContext)\n  \n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [alert, setAlert] = useState(null);\n\n  const createAccount = async () => {\n    if (!email || email.length < 1) return \"noEmail\";\n    if (!password || password.length < 1) return \"noPassword\";\n    if (!confirmPassword || confirmPassword.length < 1)\n      return \"noConfirmPassword\";\n\n    if (!validator.isEmail(email)) return setAlert(\"formatEmail\");\n    if (password.length < 8) return setAlert(\"shortPassword\");\n    if (confirmPassword.length < 8) return setAlert(\"shortConfirmPassword\");\n\n    if (password !== confirmPassword) return setAlert(\"mismatchPassword\");\n    setAlert(\"creating\");\n\n    const [success, code] = await authCreateAccount(email, password)\n     \n      if (!success) {\n        return setAlert(code)\n      }\n      history.push('/auth/sent')\n  };\n\n  return {\n    email,\n    password,\n    confirmPassword,\n    setEmail,\n    setPassword,\n    setConfirmPassword,\n    createAccount,\n    alert,\n  };\n};\n\nexport default useNewAccount;\n"]},"metadata":{},"sourceType":"module"}