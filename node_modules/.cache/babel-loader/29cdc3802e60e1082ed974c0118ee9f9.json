{"ast":null,"code":"var _jsxFileName = \"/home/namhla/projects/new-eazy-apply-app/src/components/Link/Link.jsx\";\nimport { tokens } from \"../../data/tokens\";\nimport React from \"react\";\nimport styled from 'styled-components';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Text } from \"../Text\";\n/**\n * @typeof {object} props\n * @rproperty {JSX.Element} children\n * @property {boolean} inverse\n * @property {string | function} action\n */\n\n/**\n * @param {props} props\n * @returns {JSX.Element}\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Base = styled.button`\npadding; 0;\nmargin: 0;\nbackground: none;\ntext-decoration: underline;\nborder-width: 0;\ncolor: ${({\n  inverse\n}) => inverse ? `rgba(${tokens.colors.white}, ${tokens.opacity.stronger})` : `rgba(${tokens.colors.black}, ${tokens.opacity.strong})`};\n`;\n_c = Base;\nexport const Link = props => {\n  const {\n    action,\n    children,\n    inverse\n  } = props;\n  if (typeof action !== \"string\") return /*#__PURE__*/_jsxDEV(Base, {\n    as: \"button\",\n    inverse: inverse,\n    onClick: action,\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      inverse: inverse,\n      size: \"s\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Base, {\n    as: RouterLink,\n    inverse: inverse,\n    component: \"a\",\n    to: action,\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      inverse: inverse,\n      size: \"s\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Link;\nexport default Link;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Base\");\n$RefreshReg$(_c2, \"Link\");","map":{"version":3,"sources":["/home/namhla/projects/new-eazy-apply-app/src/components/Link/Link.jsx"],"names":["tokens","React","styled","Link","RouterLink","Text","Base","button","inverse","colors","white","opacity","stronger","black","strong","props","action","children"],"mappings":";AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,SAASC,IAAT,QAAqB,SAArB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAEA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,MAAO;AAC3B;AACA;AACA;AACA;AACA;AACA,SAAS,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACPA,OAAO,GACF,QAAOR,MAAM,CAACS,MAAP,CAAcC,KAAM,KAAIV,MAAM,CAACW,OAAP,CAAeC,QAAS,GADrD,GAEF,QAAOZ,MAAM,CAACS,MAAP,CAAcI,KAAM,KAAIb,MAAM,CAACW,OAAP,CAAeG,MAAO,GAAG;AAC/D,CAVA;KAAMR,I;AAYN,OAAO,MAAMH,IAAI,GAAIY,KAAD,IAAW;AAC7B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBT,IAAAA;AAApB,MAAgCO,KAAtC;AAEA,MAAI,OAAOC,MAAP,KAAkB,QAAtB,EACE,oBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,OAAO,EAAER,OAA3B;AAAoC,IAAA,OAAO,EAAEQ,MAA7C;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAER,OAAf;AAAwB,MAAA,IAAI,EAAC,GAA7B;AAAA,gBACGS;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQF,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAEb,UAAV;AAAsB,IAAA,OAAO,EAAEI,OAA/B;AAAwC,IAAA,SAAS,EAAC,GAAlD;AAAsD,IAAA,EAAE,EAAEQ,MAA1D;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAER,OAAf;AAAwB,MAAA,IAAI,EAAC,GAA7B;AAAA,gBACGS;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAnBM;MAAMd,I;AAqBb,eAAeA,IAAf","sourcesContent":["import { tokens } from \"../../data/tokens\";\nimport React from \"react\";\nimport styled from 'styled-components';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Text } from \"../Text\";\n/**\n * @typeof {object} props\n * @rproperty {JSX.Element} children\n * @property {boolean} inverse\n * @property {string | function} action\n */\n\n/**\n * @param {props} props\n * @returns {JSX.Element}\n */\n\nconst Base = styled.button`\npadding; 0;\nmargin: 0;\nbackground: none;\ntext-decoration: underline;\nborder-width: 0;\ncolor: ${({ inverse }) =>\n  inverse\n    ? `rgba(${tokens.colors.white}, ${tokens.opacity.stronger})`\n    : `rgba(${tokens.colors.black}, ${tokens.opacity.strong})`};\n`;\n\nexport const Link = (props) => {\n  const { action, children, inverse } = props;\n\n  if (typeof action !== \"string\")\n    return (\n      <Base as=\"button\" inverse={inverse} onClick={action}>\n        <Text inverse={inverse} size=\"s\">\n          {children}\n        </Text>\n      </Base>\n    );\n\n  return (\n    <Base as={RouterLink} inverse={inverse} component=\"a\" to={action}>\n      <Text inverse={inverse} size=\"s\">\n        {children}\n      </Text>\n    </Base>\n  );\n};\n\nexport default Link;\n"]},"metadata":{},"sourceType":"module"}