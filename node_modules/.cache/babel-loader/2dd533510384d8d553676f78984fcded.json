{"ast":null,"code":"var _jsxFileName = \"/home/namhla/projects/New-Eazy-Apply/src/components/Button/Button.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Button as MuiButton } from \"@material-ui/core\";\nimport { tokens } from \"../../data/tokens\";\nimport { Link } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  white: `rgb(${tokens.colors.white})`,\n  purple: `rgb(${tokens.colors.purple})`,\n  black: `rgb(${tokens.colors.black})`,\n  none: \"transparent\",\n  purpleSubtler: `rgb(${tokens.colors.purple}, ${tokens.opacity.subtler})`,\n  purpleStronger: `rgb(${tokens.colors.purple}, ${tokens.opacity.stronger})`,\n  whiteSubtler: `rgb(${tokens.colors.white}, ${tokens.opacity.subtler})`,\n  blackStronger: `rgb(${tokens.colors.white}, ${tokens.opacity.stronger})`\n};\n\nconst calcBackground = ({\n  importance,\n  inverse\n}) => {\n  if (importance === \"primary\" && inverse) return COLORS.white;\n  if (inverse || importance === \"secondary\") return COLORS.none;\n  return COLORS.purple;\n};\n\nconst calcColor = ({\n  importance,\n  inverse\n}) => {\n  if (importance === \"primary\" && inverse) return COLORS.purple;\n  if (inverse || importance === \"primary\") return COLORS.white;\n  return COLORS.purple;\n};\n\nconst calcBorder = ({\n  importance,\n  inverse\n}) => {\n  if (importance === \"primary\") return `1px solid ${COLORS.none}`;\n  if (inverse) return `1px solid ${COLORS.white}`;\n  return `1px solid ${COLORS.purple}`;\n};\n\nconst calcHover = ({\n  importance,\n  inverse\n}) => {\n  if (importance === \"primary\" && inverse) return COLORS.whiteStronger;\n  if (inverse) return COLORS.whiteSubtler;\n  if (importance === \"primary\") return COLORS.purpleStronger;\n  return COLORS.purpleSubtler;\n};\n\nconst calcActionProps = action => {\n  if (action === true) {\n    return {\n      type: \"submit\"\n    };\n  }\n\n  if (!action) {\n    return {\n      disabled: true,\n      type: \"button\"\n    };\n  }\n\n  if (typeof action !== \"string\") return {\n    component: \"button\",\n    onClick: action,\n    type: \"button\"\n  };\n  return {\n    component: Link,\n    to: action,\n    type: \"button\"\n  };\n};\n\nconst StyledButton = styled(MuiButton)`\n  color: ${calcColor};\n  background: ${calcBackground};\n  border: ${calcBorder};\n  padding: ${tokens.spacing.s};\n\n  &:hover {\n    background: ${calcHover};\n  }\n`;\n/**\n * @typedef {object} props\n * @property {JSX.Element} children\n * @property {'primary' | 'secondary'} importance\n * @property {boolean} inverse\n * @property {string | function} action\n */\n\n/**\n * @param {props} props\n * @returns {JSX.Element}\n */\n\n_c = StyledButton;\nexport const Button = props => {\n  const {\n    children,\n    inverse,\n    importance = \"secondary\",\n    action,\n    full = false\n  } = props;\n  const variant = importance === \"primary\" ? \"contained\" : \"outlined\";\n  const actionProps = calcActionProps(action);\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    inverse: inverse,\n    importance: importance,\n    children: children,\n    ...actionProps,\n    fullWidth: full,\n    variant: variant\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Button;\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["/home/namhla/projects/New-Eazy-Apply/src/components/Button/Button.jsx"],"names":["React","styled","Button","MuiButton","tokens","Link","COLORS","white","colors","purple","black","none","purpleSubtler","opacity","subtler","purpleStronger","stronger","whiteSubtler","blackStronger","calcBackground","importance","inverse","calcColor","calcBorder","calcHover","whiteStronger","calcActionProps","action","type","disabled","component","onClick","to","StyledButton","spacing","s","props","children","full","variant","actionProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button as MuiButton } from \"@material-ui/core\";\nimport { tokens } from \"../../data/tokens\";\nimport { Link } from \"react-dom\";\n\nconst COLORS = {\n  white: `rgb(${tokens.colors.white})`,\n  purple: `rgb(${tokens.colors.purple})`,\n  black: `rgb(${tokens.colors.black})`,\n  none: \"transparent\",\n  purpleSubtler: `rgb(${tokens.colors.purple}, ${\n    (tokens.opacity.subtler)\n  })`,\n  purpleStronger: `rgb(${tokens.colors.purple}, ${\n    (tokens.opacity.stronger)\n  })`,\n  whiteSubtler: `rgb(${tokens.colors.white}, ${tokens.opacity.subtler})`,\n  blackStronger: `rgb(${tokens.colors.white}, ${tokens.opacity.stronger})`,\n};\n\nconst calcBackground = ({ importance, inverse }) => {\n  if (importance === \"primary\" && inverse) return COLORS.white;\n  if (inverse || importance === \"secondary\") return COLORS.none;\n  return COLORS.purple;\n};\n\nconst calcColor = ({ importance, inverse }) => {\n  if (importance === \"primary\" && inverse) return COLORS.purple;\n  if (inverse || importance === \"primary\") return COLORS.white;\n  return COLORS.purple;\n};\n\nconst calcBorder = ({ importance, inverse }) => {\n  if (importance === \"primary\") return `1px solid ${COLORS.none}`;\n  if (inverse) return `1px solid ${COLORS.white}`;\n  return `1px solid ${COLORS.purple}`;\n};\n\nconst calcHover = ({ importance, inverse }) => {\n  if (importance === \"primary\" && inverse) return COLORS.whiteStronger;\n  if (inverse) return COLORS.whiteSubtler;\n  if (importance === \"primary\") return COLORS.purpleStronger;\n  return COLORS.purpleSubtler;\n};\n\nconst calcActionProps = (action) => {\n  if (action === true) {\n    return { type: \"submit\" };\n  }\n\n  if (!action) {\n    return { disabled: true, type: \"button\" };\n  }\n\n  if (typeof action !== \"string\")\n    return { component: \"button\", onClick: action, type: \"button\" };\n\n  return { component: Link, to: action, type: \"button\" };\n};\n\nconst StyledButton = styled(MuiButton)`\n  color: ${calcColor};\n  background: ${calcBackground};\n  border: ${calcBorder};\n  padding: ${tokens.spacing.s};\n\n  &:hover {\n    background: ${calcHover};\n  }\n`;\n\n/**\n * @typedef {object} props\n * @property {JSX.Element} children\n * @property {'primary' | 'secondary'} importance\n * @property {boolean} inverse\n * @property {string | function} action\n */\n\n/**\n * @param {props} props\n * @returns {JSX.Element}\n */\n\nexport const Button = (props) => {\n  const {\n    children,\n    inverse,\n    importance = \"secondary\",\n    action,\n    full = false,\n  } = props;\n\n  const variant = importance === \"primary\" ? \"contained\" : \"outlined\";\n  const actionProps = calcActionProps(action);\n\n  return (\n    <StyledButton\n      inverse={inverse}\n      importance={importance}\n      children={children}\n      {...actionProps}\n      fullWidth={full}\n      variant={variant}\n    />\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}