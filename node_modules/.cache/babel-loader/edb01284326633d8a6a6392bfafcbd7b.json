{"ast":null,"code":"var _jsxFileName = \"/home/namhla/projects/New-Eazy-Apply/src/components/Text/Text.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { tokens } from \"../../data/tokens\";\nimport { Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  white: `rgb(${tokens.colors.white})`,\n  black: `rgb(${tokens.colors.black})`,\n  blackMedium: `rgba(${tokens.colors.black}, ${tokens.opacity.medium})`,\n  blackStronger: `rgba(${tokens.colors.black}, ${tokens.opacity.stronger})`,\n  blackStrong: `rgba(${tokens.colors.black}, ${tokens.opacity.strong})`,\n  whiteStrong: `rgba(${tokens.colors.white}, ${tokens.opacity.strong})`,\n  whiteStronger: `rgba(${tokens.colors.white}, ${tokens.opacity.stronger})`\n};\n\nconst calcColor = ({\n  size,\n  inverse\n}) => {\n  if ((size === \"xl\" || size === \"l\") && inverse) return COLORS.white;\n  if (size === \"xl\" || size === \"l\") return COLORS.blackStronger;\n  if (size === \"m\" && inverse) return COLORS.whiteStronger;\n  if (size === \"m\") return COLORS.blackStrong;\n  if (inverse) return COLORS.whiteStrong;\n  return COLORS.blackMedium;\n};\n\nconst StyledTypography = styled(Typography)`\n  font-size: ${({\n  size\n}) => tokens.text[size].size};\n  font-weight: ${({\n  size\n}) => tokens.text[size].weight};\n  line-height: ${({\n  size\n}) => tokens.text[size].height};\n  letter-spacing: ${({\n  size\n}) => tokens.text[size].spacing};\n  color: ${calcColor};\n`;\n/**\n *\n * @typedef {object} props\n * @property {JSX.Element} children\n * @property{'s' | 'm' | 'l' | 'xl'} size\n * @property {boolean} inverse\n * @property {'p' | 'h1' | | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'} component\n */\n\n/**\n *\n * @param {props} props\n * @returns {JSX.Element}\n */\n\n_c = StyledTypography;\nexport const Text = props => {\n  return /*#__PURE__*/_jsxDEV(StyledTypography, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n_c2 = Text;\nexport default Text;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledTypography\");\n$RefreshReg$(_c2, \"Text\");","map":{"version":3,"sources":["/home/namhla/projects/New-Eazy-Apply/src/components/Text/Text.jsx"],"names":["React","styled","tokens","Typography","COLORS","white","colors","black","blackMedium","opacity","medium","blackStronger","stronger","blackStrong","strong","whiteStrong","whiteStronger","calcColor","size","inverse","StyledTypography","text","weight","height","spacing","Text","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAG,OAAMH,MAAM,CAACI,MAAP,CAAcD,KAAM,GADrB;AAEbE,EAAAA,KAAK,EAAG,OAAML,MAAM,CAACI,MAAP,CAAcC,KAAM,GAFrB;AAGbC,EAAAA,WAAW,EAAG,QAAON,MAAM,CAACI,MAAP,CAAcC,KAAM,KAAIL,MAAM,CAACO,OAAP,CAAeC,MAAO,GAHtD;AAIbC,EAAAA,aAAa,EAAG,QAAOT,MAAM,CAACI,MAAP,CAAcC,KAAM,KAAIL,MAAM,CAACO,OAAP,CAAeG,QAAS,GAJ1D;AAKbC,EAAAA,WAAW,EAAG,QAAOX,MAAM,CAACI,MAAP,CAAcC,KAAM,KAAIL,MAAM,CAACO,OAAP,CAAeK,MAAO,GALtD;AAMbC,EAAAA,WAAW,EAAG,QAAOb,MAAM,CAACI,MAAP,CAAcD,KAAM,KAAIH,MAAM,CAACO,OAAP,CAAeK,MAAO,GANtD;AAObE,EAAAA,aAAa,EAAG,QAAOd,MAAM,CAACI,MAAP,CAAcD,KAAM,KAAIH,MAAM,CAACO,OAAP,CAAeG,QAAS;AAP1D,CAAf;;AAUA,MAAMK,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACvC,MAAI,CAACD,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,GAA3B,KAAmCC,OAAvC,EAAgD,OAAOf,MAAM,CAACC,KAAd;AAChD,MAAIa,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,GAA9B,EAAmC,OAAOd,MAAM,CAACO,aAAd;AACnC,MAAIO,IAAI,KAAK,GAAT,IAAgBC,OAApB,EAA6B,OAAOf,MAAM,CAACY,aAAd;AAC7B,MAAIE,IAAI,KAAK,GAAb,EAAkB,OAAOd,MAAM,CAACS,WAAd;AAClB,MAAIM,OAAJ,EAAa,OAAOf,MAAM,CAACW,WAAd;AACb,SAAOX,MAAM,CAACI,WAAd;AACD,CAPD;;AASA,MAAMY,gBAAgB,GAAGnB,MAAM,CAACE,UAAD,CAAa;AAC5C,eAAe,CAAC;AAAEe,EAAAA;AAAF,CAAD,KAAchB,MAAM,CAACmB,IAAP,CAAYH,IAAZ,EAAkBA,IAAK;AACpD,iBAAiB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAchB,MAAM,CAACmB,IAAP,CAAYH,IAAZ,EAAkBI,MAAO;AACxD,iBAAiB,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAchB,MAAM,CAACmB,IAAP,CAAYH,IAAZ,EAAkBK,MAAO;AACxD,oBAAoB,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAchB,MAAM,CAACmB,IAAP,CAAYH,IAAZ,EAAkBM,OAAQ;AAC5D,WAAWP,SAAU;AACrB,CANA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;KApBMG,gB;AAsBN,OAAO,MAAMK,IAAI,GAAIC,KAAD,IAAW;AAC7B,sBAAO,QAAC,gBAAD,OAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFM;MAAMD,I;AAIb,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { tokens } from \"../../data/tokens\";\nimport { Typography } from \"@material-ui/core\";\n\nconst COLORS = {\n  white: `rgb(${tokens.colors.white})`,\n  black: `rgb(${tokens.colors.black})`,\n  blackMedium: `rgba(${tokens.colors.black}, ${tokens.opacity.medium})`,\n  blackStronger: `rgba(${tokens.colors.black}, ${tokens.opacity.stronger})`,\n  blackStrong: `rgba(${tokens.colors.black}, ${tokens.opacity.strong})`,\n  whiteStrong: `rgba(${tokens.colors.white}, ${tokens.opacity.strong})`,\n  whiteStronger: `rgba(${tokens.colors.white}, ${tokens.opacity.stronger})`,\n};\n\nconst calcColor = ({ size, inverse }) => {\n  if ((size === \"xl\" || size === \"l\") && inverse) return COLORS.white;\n  if (size === \"xl\" || size === \"l\") return COLORS.blackStronger;\n  if (size === \"m\" && inverse) return COLORS.whiteStronger;\n  if (size === \"m\") return COLORS.blackStrong;\n  if (inverse) return COLORS.whiteStrong;\n  return COLORS.blackMedium;\n};\n\nconst StyledTypography = styled(Typography)`\n  font-size: ${({ size }) => tokens.text[size].size};\n  font-weight: ${({ size }) => tokens.text[size].weight};\n  line-height: ${({ size }) => tokens.text[size].height};\n  letter-spacing: ${({ size }) => tokens.text[size].spacing};\n  color: ${calcColor};\n`;\n/**\n *\n * @typedef {object} props\n * @property {JSX.Element} children\n * @property{'s' | 'm' | 'l' | 'xl'} size\n * @property {boolean} inverse\n * @property {'p' | 'h1' | | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'} component\n */\n\n/**\n *\n * @param {props} props\n * @returns {JSX.Element}\n */\n\nexport const Text = (props) => {\n  return <StyledTypography {...props} />;\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}