{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport validator from \"validator\";\nimport { context as authContext } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\nexport const useResetPassword = () => {\n  _s();\n\n  const {\n    reset\n  } = useContext(authContext);\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [alert, setAlert] = useState(null);\n\n  const send = async () => {\n    if (!email || email.length < 1) return setAlert(\"noEmail\");\n    if (!validator.isEmail(email)) return setAlert(\"formatEmail\");\n    setAlert(\"checking\");\n    await reset(email);\n    history.push(\"/auth/sent\");\n  };\n\n  return {\n    email,\n    setEmail,\n    send,\n    alert\n  };\n};\n\n_s(useResetPassword, \"fyphnWukaJmMNzcfWXNh9bTbLh8=\", false, function () {\n  return [useHistory];\n});\n\nexport default useResetPassword;","map":{"version":3,"sources":["/home/namhla/projects/New-Eazy-Apply/src/views/ResetPassword/ResetPassword.useResetPassword.js"],"names":["useState","useContext","validator","context","authContext","useHistory","useResetPassword","reset","history","email","setEmail","alert","setAlert","send","length","isEmail","push"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,qBAAvC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAYN,UAAU,CAACG,WAAD,CAA5B;AACA,QAAMI,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMa,IAAI,GAAG,YAAY;AACvB,QAAI,CAACJ,KAAD,IAAUA,KAAK,CAACK,MAAN,GAAe,CAA7B,EAAgC,OAAOF,QAAQ,CAAC,SAAD,CAAf;AAChC,QAAI,CAACV,SAAS,CAACa,OAAV,CAAkBN,KAAlB,CAAL,EAA+B,OAAOG,QAAQ,CAAC,aAAD,CAAf;AAE/BA,IAAAA,QAAQ,CAAC,UAAD,CAAR;AACA,UAAML,KAAK,CAACE,KAAD,CAAX;AACAD,IAAAA,OAAO,CAACQ,IAAR,CAAa,YAAb;AACD,GAPD;;AASA,SAAO;AACLP,IAAAA,KADK;AAELC,IAAAA,QAFK;AAGLG,IAAAA,IAHK;AAILF,IAAAA;AAJK,GAAP;AAMD,CArBM;;GAAML,gB;UAEKD,U;;;AAoBlB,eAAeC,gBAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport validator from \"validator\";\nimport { context as authContext } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const useResetPassword = () => {\n  const { reset } = useContext(authContext);\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [alert, setAlert] = useState(null);\n\n  const send = async () => {\n    if (!email || email.length < 1) return setAlert(\"noEmail\");\n    if (!validator.isEmail(email)) return setAlert(\"formatEmail\");\n    \n    setAlert(\"checking\");\n    await reset(email);\n    history.push(\"/auth/sent\");\n  };\n\n  return {\n    email,\n    setEmail,\n    send,\n    alert,\n  };\n};\nexport default useResetPassword;\n"]},"metadata":{},"sourceType":"module"}